module Intro.SchemaChanges where

import DA.Set(Set)

data Claim t x a o
  = Zero
      -- ^ Represents an absence of claims. Monoid `And` identity.
  | One a
      -- ^ The bearer acquires one unit of `a` *immediately*.
  | Give (Claim t x a o)
  deriving (Eq,Show)

type Claims = Claim Date Decimal Int Text

template Same
  with
    issuer : Party
    owner : Party
    amount : Decimal
  where
    ensure amount > 0.0
    signatory issuer, owner

template SameWithSetPrimitives
  with
    issuer : Party
    owner : Party
    amount : Decimal
    observers : Set Party
  where
    ensure amount > 0.0
    signatory issuer, owner

template SameWithType
  with
    issuer : Party
    owner : Party
    amount : Decimal
    claims : Claims
  where
    ensure amount > 0.0
    signatory issuer, owner

template AddField
  with
    issuer : Party
    owner : Party
    amount : Decimal
    currency : Text
  where
    signatory issuer, owner

template AddOptionalField
  with
    issuer : Party
    owner : Party
    amount : Decimal
    currency : Optional Text
  where
    signatory issuer, owner

template RemoveField
  with
    issuer : Party
    owner : Party
    amount : Decimal
  where
    signatory issuer, owner

template ReorderField
  with
    issuer : Party
    owner : Party
    currency : Text
    amount : Decimal
  where
    signatory issuer, owner

template FieldNameChange
  with
    issuer : Party
    owner : Party
    value : Decimal
  where
    signatory issuer, owner

template FieldTypeChange
  with
    issuer : Party
    owner : Party
    amount : Text
  where
    signatory issuer, owner

template FieldBecomesOptional
  with
    issuer : Party
    owner : Party
    amount : Decimal
    currency : Optional Text
  where
    signatory issuer, owner

template FieldBecomesMandatory
  with
    issuer : Party
    owner : Party
    amount : Decimal
    currency : Text
  where
    signatory issuer, owner