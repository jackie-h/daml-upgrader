module TestContracts where

import Daml.Script
import Carbon

createContracts : Script [Party]
createContracts = do
    alice <- allocateParty "alice"
    bob <- allocateParty "bob"
    aliceId <- validateUserId "alice"
    bobId <- validateUserId "bob"
    createUser (User aliceId (Some alice)) [CanActAs alice]
    createUser (User bobId (Some bob)) [CanActAs bob]

    bobProposal <- submit alice $ createCmd (CarbonCertProposal alice bob 10)
    submit bob $ exerciseCmd bobProposal CarbonCertProposal_Accept
    pure ( [ alice, bob] )

queryContracts : Party -> Script [(ContractId CarbonCert, CarbonCert)]
queryContracts theOwner = do
    certs <- query @CarbonCert theOwner
    pure( certs )