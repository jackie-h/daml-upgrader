module InitiateUpgrade where

import Daml.Script
import DA.Foldable (forA_)
import DA.List (dedup)
import UpgradeCarbon
import qualified V1.Carbon as CarbonV1


initiateUpgrade : Party -> Script Text
initiateUpgrade theOwner = do
  certs <- query @CarbonV1.CarbonCert theOwner
  let myCerts = filter (\(_cid, c) -> c.issuer == theOwner) certs
  let owners = dedup $ map (\(_cid, c) -> c.owner) myCerts
  forA_ owners $ \owner -> do
    debugRaw ("Creating upgrade proposal for: " <> show owner)
    submit theOwner $ createCmd (UpgradeCarbonCertProposal theOwner owner)
  pure ("Success")


queryUpgrade : Party -> Script [(ContractId UpgradeCarbonCertProposal, UpgradeCarbonCertProposal)]
queryUpgrade theOwner = do
  certs <- query @UpgradeCarbonCertProposal theOwner
  pure( certs )